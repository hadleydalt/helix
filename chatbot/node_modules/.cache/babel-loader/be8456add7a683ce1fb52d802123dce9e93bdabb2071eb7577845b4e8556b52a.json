{"ast":null,"code":"var _jsxFileName = \"/Users/hadleydalton/Desktop/Desktop/sellscale_agentic_hr/chatbot/src/Chatbot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [userInput, setUserInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [profile, setProfile] = useState(\"Anxious Patient\");\n  const userId = \"user123\"; // Ideally, this would be dynamic for real users\n\n  const patientProfiles = {\n    \"Angry Patient\": \"gets easily frustrated and feels misunderstood.\",\n    \"Anxious Patient\": \"struggles with anxiety and overthinks situations.\",\n    \"Depressed Patient\": \"feels hopeless and lacks motivation.\",\n    \"Trauma Survivor\": \"has experienced trauma and is hesitant to open up.\"\n  };\n  const resetChat = async () => {\n    setMessages([]); // Clear messages on frontend\n\n    try {\n      await axios.post(\"http://127.0.0.1:5000/reset\", {\n        user_id: userId\n      });\n    } catch (error) {\n      console.error(\"Error resetting chat:\", error);\n    }\n  };\n  const sendMessage = async () => {\n    if (!userInput) return;\n    const newMessages = [...messages, {\n      role: \"user\",\n      content: userInput\n    }];\n    setMessages(newMessages);\n    setUserInput(\"\");\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/chat\", {\n        user_id: userId,\n        message: userInput,\n        profile: patientProfiles[profile]\n      });\n      setMessages([...newMessages, {\n        role: \"assistant\",\n        content: response.data.response\n      }]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"30%\",\n      height: \"100vh\",\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      backgroundColor: \"#f5f5f5\",\n      borderRight: \"1px solid #ddd\",\n      padding: \"20px\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: \"AI Therapy Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      style: {\n        padding: \"8px\",\n        marginBottom: \"20px\",\n        borderRadius: \"4px\",\n        border: \"1px solid #ddd\"\n      },\n      onChange: e => {\n        setProfile(e.target.value);\n        resetChat();\n      },\n      value: profile,\n      children: Object.keys(patientProfiles).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: key,\n        children: key\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        border: \"1px solid #ddd\",\n        borderRadius: \"4px\",\n        padding: \"10px\",\n        marginBottom: \"20px\",\n        overflowY: \"auto\",\n        backgroundColor: \"white\"\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.role === \"user\" ? \"right\" : \"left\",\n          marginBottom: \"10px\",\n          padding: \"8px\",\n          borderRadius: \"4px\",\n          backgroundColor: msg.role === \"user\" ? \"#e3f2fd\" : \"#f5f5f5\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [msg.role === \"user\" ? \"You\" : \"AI\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type a message...\",\n        style: {\n          flex: 1,\n          padding: \"8px\",\n          borderRadius: \"4px\",\n          border: \"1px solid #ddd\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          padding: \"8px 16px\",\n          borderRadius: \"4px\",\n          border: \"none\",\n          backgroundColor: \"#2196f3\",\n          color: \"white\",\n          cursor: \"pointer\"\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"vBy5ZJRkhH090cKZzZd/Bia83j8=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","userInput","setUserInput","messages","setMessages","profile","setProfile","userId","patientProfiles","resetChat","post","user_id","error","console","sendMessage","newMessages","role","content","response","message","data","handleKeyPress","e","key","style","width","height","position","left","top","backgroundColor","borderRight","padding","display","flexDirection","children","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","borderRadius","border","onChange","target","value","Object","keys","map","flex","overflowY","msg","index","textAlign","gap","type","onKeyPress","placeholder","onClick","color","cursor","_c","$RefreshReg$"],"sources":["/Users/hadleydalton/Desktop/Desktop/sellscale_agentic_hr/chatbot/src/Chatbot.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport type { ChangeEvent, KeyboardEvent } from \"react\";\nimport axios from \"axios\";\n\ninterface Message {\n  role: \"user\" | \"assistant\";\n  content: string;\n}\n\ninterface PatientProfile {\n  [key: string]: string;\n}\n\nconst Chatbot: React.FC = () => {\n  const [userInput, setUserInput] = useState(\"\");\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [profile, setProfile] = useState(\"Anxious Patient\");\n  const userId = \"user123\"; // Ideally, this would be dynamic for real users\n\n  const patientProfiles: PatientProfile = {\n    \"Angry Patient\": \"gets easily frustrated and feels misunderstood.\",\n    \"Anxious Patient\": \"struggles with anxiety and overthinks situations.\",\n    \"Depressed Patient\": \"feels hopeless and lacks motivation.\",\n    \"Trauma Survivor\": \"has experienced trauma and is hesitant to open up.\"\n  };\n\n  const resetChat = async (): Promise<void> => {\n    setMessages([]); // Clear messages on frontend\n  \n    try {\n      await axios.post(\"http://127.0.0.1:5000/reset\", { user_id: userId });\n    } catch (error) {\n      console.error(\"Error resetting chat:\", error);\n    }\n  };\n\n  const sendMessage = async (): Promise<void> => {\n    if (!userInput) return;\n\n    const newMessages: Message[] = [...messages, { role: \"user\", content: userInput }];\n    setMessages(newMessages);\n    setUserInput(\"\");\n\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/chat\", {\n        user_id: userId,\n        message: userInput,\n        profile: patientProfiles[profile]\n      });\n\n      setMessages([...newMessages, { role: \"assistant\", content: response.data.response }]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n\n  const handleKeyPress = (e: KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n\n  return (\n    <div style={{ \n      width: \"30%\", \n      height: \"100vh\",\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      backgroundColor: \"#f5f5f5\",\n      borderRight: \"1px solid #ddd\",\n      padding: \"20px\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    }}>\n      <h2 style={{ marginBottom: \"20px\" }}>AI Therapy Chat</h2>\n      <select \n        style={{\n          padding: \"8px\",\n          marginBottom: \"20px\",\n          borderRadius: \"4px\",\n          border: \"1px solid #ddd\"\n        }}\n        onChange={(e: ChangeEvent<HTMLSelectElement>) => {\n          setProfile(e.target.value);\n          resetChat();\n        }} \n        value={profile}\n      >\n        {Object.keys(patientProfiles).map((key) => (\n          <option key={key} value={key}>{key}</option>\n        ))}\n      </select>\n      <div style={{ \n        flex: 1,\n        border: \"1px solid #ddd\",\n        borderRadius: \"4px\",\n        padding: \"10px\",\n        marginBottom: \"20px\",\n        overflowY: \"auto\",\n        backgroundColor: \"white\"\n      }}>\n        {messages.map((msg, index) => (\n          <div \n            key={index} \n            style={{ \n              textAlign: msg.role === \"user\" ? \"right\" : \"left\",\n              marginBottom: \"10px\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              backgroundColor: msg.role === \"user\" ? \"#e3f2fd\" : \"#f5f5f5\"\n            }}\n          >\n            <b>{msg.role === \"user\" ? \"You\" : \"AI\"}:</b> {msg.content}\n          </div>\n        ))}\n      </div>\n      <div style={{ display: \"flex\", gap: \"10px\" }}>\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => setUserInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Type a message...\"\n          style={{\n            flex: 1,\n            padding: \"8px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ddd\"\n          }}\n        />\n        <button \n          onClick={sendMessage}\n          style={{\n            padding: \"8px 16px\",\n            borderRadius: \"4px\",\n            border: \"none\",\n            backgroundColor: \"#2196f3\",\n            color: \"white\",\n            cursor: \"pointer\"\n          }}\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}