{"ast":null,"code":"var _jsxFileName = \"/Users/hadleydalton/Desktop/Desktop/sellscale_agentic_hr/chatbot/src/Workspace.tsx\";\nimport React from 'react';\nimport './Workspace.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Workspace = ({\n  sequence\n}) => {\n  const parseSequence = sequence => {\n    // Split by \"---\" to separate messages\n    const parts = sequence.split('---').map(part => part.trim()).filter(part => part.length > 0);\n    return parts;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), sequence ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sequence-content\",\n        children: parseSequence(sequence).map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: index === 0 ? 'Initial Message' : `Follow-up ${index}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-body\",\n            children: message.split('\\n').map((line, lineIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: line\n            }, lineIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No sequence generated yet. Start a conversation to generate a sequence.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = Workspace;\nexport default Workspace;\nvar _c;\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Workspace","sequence","parseSequence","parts","split","map","part","trim","filter","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","index","line","lineIndex","_c","$RefreshReg$"],"sources":["/Users/hadleydalton/Desktop/Desktop/sellscale_agentic_hr/chatbot/src/Workspace.tsx"],"sourcesContent":["import React from 'react';\nimport './Workspace.css';\n\ninterface WorkspaceProps {\n  sequence?: string;\n}\n\nconst Workspace: React.FC<WorkspaceProps> = ({ sequence }) => {\n  const parseSequence = (sequence: string) => {\n    // Split by \"---\" to separate messages\n    const parts = sequence.split('---').map(part => part.trim()).filter(part => part.length > 0);\n    return parts;\n  };\n\n  return (\n    <div className=\"main-content\">\n      <div className=\"content-box\">\n        <h2>Generated Sequence</h2>\n        {sequence ? (\n          <div className=\"sequence-content\">\n            {parseSequence(sequence).map((message, index) => (\n              <div key={index} className=\"message-box\">\n                <div className=\"message-header\">\n                  {index === 0 ? 'Initial Message' : `Follow-up ${index}`}\n                </div>\n                <div className=\"message-body\">\n                  {message.split('\\n').map((line, lineIndex) => (\n                    <p key={lineIndex}>{line}</p>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p>No sequence generated yet. Start a conversation to generate a sequence.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Workspace; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMzB,MAAMC,SAAmC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5D,MAAMC,aAAa,GAAID,QAAgB,IAAK;IAC1C;IACA,MAAME,KAAK,GAAGF,QAAQ,CAACG,KAAK,CAAC,KAAK,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC;IAC5F,OAAON,KAAK;EACd,CAAC;EAED,oBACEJ,OAAA;IAAKW,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BZ,OAAA;MAAKW,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BZ,OAAA;QAAAY,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC1Bd,QAAQ,gBACPF,OAAA;QAAKW,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAC9BT,aAAa,CAACD,QAAQ,CAAC,CAACI,GAAG,CAAC,CAACW,OAAO,EAAEC,KAAK,kBAC1ClB,OAAA;UAAiBW,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACtCZ,OAAA;YAAKW,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC5BM,KAAK,KAAK,CAAC,GAAG,iBAAiB,GAAG,aAAaA,KAAK;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD,CAAC,eACNhB,OAAA;YAAKW,SAAS,EAAC,cAAc;YAAAC,QAAA,EAC1BK,OAAO,CAACZ,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACa,IAAI,EAAEC,SAAS,kBACvCpB,OAAA;cAAAY,QAAA,EAAoBO;YAAI,GAAhBC,SAAS;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAC7B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAREE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,gBAENhB,OAAA;QAAAY,QAAA,EAAG;MAAuE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC9E;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GAhCIpB,SAAmC;AAkCzC,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}