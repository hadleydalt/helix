{"ast":null,"code":"var _jsxFileName = \"/Users/hadleydalton/Desktop/Desktop/sellscale_agentic_hr/chatbot/src/Chatbot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [userInput, setUserInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const userId = \"user123\"; // Ideally, this would be dynamic for real users\n\n  const resetChat = async () => {\n    setMessages([]); // Clear messages on frontend\n\n    try {\n      await axios.post(\"http://127.0.0.1:5000/reset\", {\n        user_id: userId\n      });\n    } catch (error) {\n      console.error(\"Error resetting chat:\", error);\n    }\n  };\n  const sendMessage = async () => {\n    if (!userInput) return;\n    const newMessages = [...messages, {\n      role: \"user\",\n      content: userInput\n    }];\n    setMessages(newMessages);\n    setUserInput(\"\");\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/chat\", {\n        user_id: userId,\n        message: userInput\n      });\n      setMessages([...newMessages, {\n        role: \"assistant\",\n        content: response.data.response\n      }]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        style: {\n          textAlign: msg.role === \"user\" ? \"right\" : \"left\",\n          backgroundColor: msg.role === \"user\" ? \"#e3f2fd\" : \"#f5f5f5\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [msg.role === \"user\" ? \"You\" : \"AI\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type a message...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"+vXbx/Nge9+qMRHYnTLWQh28qis=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","userInput","setUserInput","messages","setMessages","userId","resetChat","post","user_id","error","console","sendMessage","newMessages","role","content","response","message","data","handleKeyPress","e","key","className","children","map","msg","index","style","textAlign","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/hadleydalton/Desktop/Desktop/sellscale_agentic_hr/chatbot/src/Chatbot.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport type { ChangeEvent, KeyboardEvent } from \"react\";\nimport axios from \"axios\";\nimport \"./Chatbot.css\";\n\ninterface Message {\n  role: \"user\" | \"assistant\";\n  content: string;\n}\n\nconst Chatbot: React.FC = () => {\n  const [userInput, setUserInput] = useState(\"\");\n  const [messages, setMessages] = useState<Message[]>([]);\n  const userId = \"user123\"; // Ideally, this would be dynamic for real users\n\n  const resetChat = async (): Promise<void> => {\n    setMessages([]); // Clear messages on frontend\n  \n    try {\n      await axios.post(\"http://127.0.0.1:5000/reset\", { user_id: userId });\n    } catch (error) {\n      console.error(\"Error resetting chat:\", error);\n    }\n  };\n\n  const sendMessage = async (): Promise<void> => {\n    if (!userInput) return;\n\n    const newMessages: Message[] = [...messages, { role: \"user\", content: userInput }];\n    setMessages(newMessages);\n    setUserInput(\"\");\n\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/chat\", {\n        user_id: userId,\n        message: userInput\n      });\n\n      setMessages([...newMessages, { role: \"assistant\", content: response.data.response }]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n\n  const handleKeyPress = (e: KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"chat-container\">\n        {messages.map((msg, index) => (\n          <div \n            key={index} \n            className=\"message\"\n            style={{ \n              textAlign: msg.role === \"user\" ? \"right\" : \"left\",\n              backgroundColor: msg.role === \"user\" ? \"#e3f2fd\" : \"#f5f5f5\"\n            }}\n          >\n            <b>{msg.role === \"user\" ? \"You\" : \"AI\"}:</b> {msg.content}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => setUserInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Type a message...\"\n          className=\"message-input\"\n        />\n        <button \n          onClick={sendMessage}\n          className=\"send-button\"\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}